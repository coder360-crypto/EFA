# EFA Backend Credentials
# Enhanced Function Agent Backend Credentials File
# 
# WARNING: This file contains sensitive information!
# - Never commit this file to version control
# - Restrict file permissions (chmod 600)
# - Use environment variables in production
# - Consider using a secrets management system

# LLM Provider Credentials
llm_providers:
  openrouter:
    api_key: "${OPENROUTER_API_KEY}"  # Set via environment variable
    site_url: "${OPENROUTER_SITE_URL}"  # Optional: Your app URL
    app_name: "${OPENROUTER_APP_NAME}"  # Optional: Your app name

# Environment Credentials
environments:
  nextcloud:
    username: "${NEXTCLOUD_USERNAME}"
    password: "${NEXTCLOUD_PASSWORD}"
    # Alternative: app_password for enhanced security
    app_password: "${NEXTCLOUD_APP_PASSWORD}"
    
  # Custom environment credentials
  custom:
    api_key: "${CUSTOM_API_KEY}"
    secret: "${CUSTOM_SECRET}"

# Database Credentials (for future use)
database:
  username: "${DB_USERNAME}"
  password: "${DB_PASSWORD}"
  host: "${DB_HOST}"
  port: "${DB_PORT}"

# External Service Credentials
external_services:
  # Example: External API credentials
  some_api:
    api_key: "${SOME_API_KEY}"
    secret_key: "${SOME_SECRET_KEY}"
    
  # Email service (for notifications)
  email:
    smtp_host: "${SMTP_HOST}"
    smtp_port: "${SMTP_PORT}"
    username: "${SMTP_USERNAME}"
    password: "${SMTP_PASSWORD}"

# Authentication and Security
security:
  # JWT secret for token signing
  jwt_secret: "${JWT_SECRET_KEY}"
  
  # API keys for client authentication
  api_keys:
    admin: "${ADMIN_API_KEY}"
    client: "${CLIENT_API_KEY}"
    
  # Encryption keys
  encryption:
    key: "${ENCRYPTION_KEY}"
    salt: "${ENCRYPTION_SALT}"

# Cloud Service Credentials
cloud_services:
  aws:
    access_key_id: "${AWS_ACCESS_KEY_ID}"
    secret_access_key: "${AWS_SECRET_ACCESS_KEY}"
    region: "${AWS_REGION}"
    
  azure:
    client_id: "${AZURE_CLIENT_ID}"
    client_secret: "${AZURE_CLIENT_SECRET}"
    tenant_id: "${AZURE_TENANT_ID}"
    
  gcp:
    service_account_path: "${GCP_SERVICE_ACCOUNT_PATH}"
    project_id: "${GCP_PROJECT_ID}"

# Monitoring and Logging Services
monitoring:
  sentry:
    dsn: "${SENTRY_DSN}"
    
  datadog:
    api_key: "${DATADOG_API_KEY}"
    app_key: "${DATADOG_APP_KEY}"

# Cache Services
cache:
  redis:
    host: "${REDIS_HOST}"
    port: "${REDIS_PORT}"
    password: "${REDIS_PASSWORD}"
    database: "${REDIS_DB}"

# Message Queue Services
message_queue:
  rabbitmq:
    host: "${RABBITMQ_HOST}"
    port: "${RABBITMQ_PORT}"
    username: "${RABBITMQ_USERNAME}"
    password: "${RABBITMQ_PASSWORD}"
    vhost: "${RABBITMQ_VHOST}"

# Development and Testing
development:
  test_api_key: "test_key_123"  # Only for local development
  mock_credentials:
    enabled: false

# Default environment variable mappings
# These can be overridden by actual environment variables
defaults:
  OPENROUTER_API_KEY: ""
  OPENROUTER_SITE_URL: "https://github.com/yourusername/efa"
  OPENROUTER_APP_NAME: "EFA Backend"
  NEXTCLOUD_USERNAME: ""
  NEXTCLOUD_PASSWORD: ""
  DB_USERNAME: "efa_user"
  DB_PASSWORD: ""
  JWT_SECRET_KEY: "change_this_in_production"
  ADMIN_API_KEY: "admin_key_change_this"
  CLIENT_API_KEY: "client_key_change_this"

# Instructions for setup:
# 1. Copy this file to credentials.local.yaml (which should be in .gitignore)
# 2. Replace ${VAR_NAME} with actual values or set environment variables
# 3. Set appropriate file permissions: chmod 600 credentials.yaml
# 4. In production, use a proper secrets management system
